/*
 * This program is analyzing weather csv data files files.
 * It can analyse a bunch of CSV files from a directory.
 * The CSV file structure is the following:
 *  //  TimeEST, TemperatureF, Dew PointF, Humidity, Sea Level PressureIn, VisibilityMPH, Wind Direction, Wind SpeedMPH, Gust SpeedMPH, PrecipitationIn, Events, Conditions, WindDirDegrees, DateUTC
 *  //  12:51 AM, 48.9, 46.9, 93, 30.15, 0.2, Calm, Calm, -, N/A, Fog, Fog, 0, 2015-01-04 05:51:00
 * In this program I only use the TemperatureF and Humidity columns, therefore I collect these rows in arrays.
 * The array declaration is in the IdojarasSzamlalo.java file.
 * Here is a Interface in MeghivhatoSzamlalo.java, which helps to handle the CSVParser and the CSVRecorder.
 * The SzamolasSegito.java is helping to calculate the largest and lowest temperature.
 * HottestOneDay.java will help to find the Hottest one day from the CSV files.
 * Same gose to the ColdestOneDay.java which finds the Coldest one day.
 * And the HumidityOneDay.java is similar to the two abow.
 */
package csvtemperature;

/**
 *
 * @author Bekor
 */

import edu.duke.*;
import org.apache.commons.csv.*;
import java.io.*;

public class Csvtemperature {

    public void test() {
        // For chosing your data directory.
        DirectoryResource dr = new DirectoryResource(); //It is a class from the Duke University course package.
        Iterable<File> fileok = dr.selectedFiles();  
        
        // Call the interface for iterating through the files from the directory
        IdojarasSzamolo szamolo = new IdojarasSzamolo();
        for (File f : fileok) {
            FileResource fr = new FileResource(f);
            szamolo.addData(fr.getCSVParser()); //Collect every data from a single CSV file
        }
                
        //In case of debugging.
        //FileResource fr = new FileResource("data/2015/weather-2015-01-05.csv")
        
        displayText("Hottest temperature", "TemperatureF", szamolo.getHottestDay());
        displayText("Coldest temperature", "TemperatureF", szamolo.getColdestDay());
        displayText("Humidity", "Humidity", szamolo.getHighHumidDay());
        displayText("Humidity", "Humidity", szamolo.getLowHumidDay());
        System.out.println("Avarage temp " + szamolo.getAvarageTemp());
        System.out.println("Avarage temp over 80 humidity " + szamolo.getOver80AvarageTemp());
    }
    
    // The variables in order: simple name, Column name in the CSV, calculated row
    private void displayText(String day, String key, CSVRecord row) {
        System.out.format("%s %s at %s\n", day, row.get(key), row.get("DateUTC"));
    }
        
    /**
     * @param args the command line arguments
     * For calling the test function.
     */
    public static void main(String[] args) {
        Csvtemperature boj = new Csvtemperature();
        boj.test();
    }
}
